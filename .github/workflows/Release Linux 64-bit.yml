name: Release
on: [workflow_dispatch]
permissions: write-all
env:
  RELEASE_VERSION: 0.9.0-auto
  GH_TOKEN: ${{ github.token }}
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04]
          #os: [ubuntu-20.04, ubuntu-22.04, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: install packages
      run: sudo apt update && sudo apt install lv2-dev libfltk1.3-dev libxcursor-dev libxfixes-dev libxft-dev libxinerama-dev
    - name: make
      run: |
        make -j`nproc`

    - name: make tarball
      run : |
        VERSION=`grep VERSION src/version.h | cut -d'"' -f2`
        tar -cvzf pokeysynth-$VERSION-linux64.tar.gz pokeysynth.lv2

    - name: Archive production artifacts on failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: linux64-build-failure
        path: pokeysynth.lv2

    - name: upload release asset
      run: |
        gh release upload $RELEASE_VERSION pokeysynth-*.tar.gz

  build2:
    strategy:
      matrix:
        os: [windows-2022]
          #os: [windows-2019,windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-gcc mingw-w64-x86_64-fltk make mingw-w64-x86_64-lv2 zip
    - name: build pokeysynth with msys2
      shell: msys2 '{0}'
      run: |
        make

    - name: make zip archive
      shell: msys2 '{0}'
      run : |
        VERSION=`grep VERSION src/version.h | cut -d'"' -f2`
        zip -9r pokeysynth-$VERSION-win64.zip pokeysynth.lv2

    - name: Archive production artifacts on failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: win64-build-failure
        path: pokeysynth.lv2

    - name: upload release asset
      run: |
        gh release upload $env:RELEASE_VERSION pokeysynth-*.zip
